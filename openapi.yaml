openapi: 3.0.3
info:
  title: Testify API
  description: An API for generating and managing multiple-choice questions
  version: 1.0.3
servers:
  - url: http://localhost:5000
paths:
  /questions:
    post:
      operationId: addQuestion
      summary: Add a multiple-choice question
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tag:
                  type: string
                  example: Science
                level:
                  type: string
                  example: B2
      responses:
        "200":
          description: Question added successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Question added successfully
    get:
      operationId: getAllQuestions
      summary: Get all questions
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  questions:
                    type: array
                    items:
                      $ref: "#/components/schemas/Question"
    delete:
      operationId: deleteDeniedQuestions
      summary: Delete denied questions
      responses:
        "200":
          description: Questions deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "3 questions with status 'denied' deleted successfully."
  /questions/{question_id}:
    get:
      operationId: getQuestion
      summary: Get a question by ID
      parameters:
        - in: path
          name: question_id
          required: true
          schema:
            type: string
          description: The ID of the question
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Question"
        "404":
          description: Question not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Question not found.
    delete:
      operationId: deleteQuestion
      summary: Delete a question by ID
      parameters:
        - in: path
          name: question_id
          required: true
          schema:
            type: string
          description: The ID of the question
      responses:
        "200":
          description: Question deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Question deleted successfully.
        "404":
          description: Question not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Question not found.
    put:
      operationId: setQuestion
      summary: Update a question by ID
      parameters:
        - in: path
          name: question_id
          required: true
          schema:
            type: string
          description: The ID of the question
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: approved
      responses:
        "200":
          description: Question updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Question updated successfully.
        "404":
          description: Question not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Question not found.
components:
  schemas:
    Question:
      type: object
      properties:
        _id:
          type: string
        tag:
          type: string
        level:
          type: string
        prompt:
          type: string
        status:
          type: string
        revised:
          type: boolean
